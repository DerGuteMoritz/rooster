Rooster is a server built in Chicken Scheme and C. It uses epoll from a C interface.
The basic idea behind Rooster is that you write request handlers in Chicken Scheme
similar to a web server. You pass these handlers to the event loop and Rooster calls
back into your handlers with a socket fd and the input buffer. This lets your application
process inputs and lets you use Rooster to handle the lower level stuff.

Requires linux + epoll at the moment.
I'd like to fallback to poll if epoll isn't available.

Run make to generate rooster.so

    $ make

To use rooster.so:

    (require 'rooster)

    (define (handler fd rbuf)
        ;; echo input back to client
        (send-to-client fd rbuf))

    ;; pass handler to rooster
    (run-rooster handler)
